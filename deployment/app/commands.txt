Deployment Lambda Layer test version 2: (with etl functionality)
** Make sure you are in /app **

docker run --rm -v ${PWD}:/var/task "lambci/lambda:build-python3.8" /bin/sh -c "pip install -r requirements_testetl.txt -t build/packages/python; cd build/packages && zip -r ../lambda_layer_v1.zip python; cd ../../; rm -r build/packages; zip -r build/etl_lambdafunction_v1.zip etl_v1.py; exit"

copy both zips to bucket:
aws s3 cp build/etl_lambdafunction_v1.zip s3://team3-deployment/lambdafunctions/; aws s3 cp build/lambda_layer_v1.zip s3://team3-deployment/lambdalayers/

copy template to bucket:
aws s3 cp ../templates/etl_template_v1.yaml s3://team3-deployment/templates/

creating stack:
aws cloudformation create-stack --stack-name team3-deployment --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_template_v1.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_lambdafunction_v1.zip' ParameterKey=BucketName,ParameterValue='team3-data' --capabilities CAPABILITY_IAM

uncomment .yaml then update-stack:
aws cloudformation update-stack --stack-name team3-deployment --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_template_v1.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_lambdafunction_v1.zip' ParameterKey=BucketName,ParameterValue='team3-data' --capabilities CAPABILITY_IAM
