** TO BE DEPRECATED **
Deployment etl_v2 (decoupled ET and L with lambda layers):
docker run --rm -v ${PWD}:/var/task "lambci/lambda:build-python3.8" /bin/sh -c "pip install -r requirements_etlv2.txt -t build/packages/python; cd build/packages && zip -r ../lambda_layer_v2.zip python; cd ../../; rm -r build/packages; zip -r build/etl_v2_ET.zip etl_v2_ET.py; zip -r build/etl_v2_L_stores.zip etl_v2_L_stores.py inserter.py; zip -r build/etl_v2_L_orders.zip etl_v2_L_orders.py inserter.py; zip -r build/etl_v2_L_products.zip etl_v2_L_products.py inserter.py; zip -r build/etl_v2_L_ordersproducts.zip etl_v2_L_ordersproducts.py inserter.py; exit"

copy both zips to bucket:
aws s3 cp build/ s3://team3-deployment/lambdafunctions/ --recursive --include="*.zip" --exclude="lambda_layer_v2.zip"; aws s3 cp build/lambda_layer_v2.zip s3://team3-deployment/lambdalayers/

copy template to bucket:
aws s3 cp ../templates/create/ s3://team3-deployment/templates/ --recursive --include="*.yaml"

creating stacks:
echo "creating ET-stack"; aws cloudformation create-stack --stack-name team3-deployment --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_stack_v2_ET.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_v2_ET.zip' ParameterKey=BucketName,ParameterValue='team3-data' --capabilities CAPABILITY_IAM; echo "creating orders-stack"; aws cloudformation create-stack --stack-name team3-orders --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_stack_v2_L_orders.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_v2_L_orders.zip' ParameterKey=BucketName,ParameterValue='team3-orders' --capabilities CAPABILITY_IAM; echo "creating products-stack"; aws cloudformation create-stack --stack-name team3-products --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_stack_v2_L_products.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_v2_L_products.zip' ParameterKey=BucketName,ParameterValue='team3-products' --capabilities CAPABILITY_IAM; echo "creating stores-stack"; aws cloudformation create-stack --stack-name team3-stores --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_stack_v2_L_stores.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_v2_L_stores.zip' ParameterKey=BucketName,ParameterValue='team3-stores' --capabilities CAPABILITY_IAM; echo "creating ordersproducts-stack"; aws cloudformation create-stack --stack-name team3-ordersproducts --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_stack_v2_L_ordersproducts.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_v2_L_ordersproducts.zip' ParameterKey=BucketName,ParameterValue='team3-ordersproducts' --capabilities CAPABILITY_IAM


upload uncommented .yaml then update-stacks:

echo "uploading uncommented templates"; aws s3 cp ../templates/update/ s3://team3-deployment/templates/ --recursive --include="*.yaml"; echo "updating ET-stack"; aws cloudformation update-stack --stack-name team3-deployment --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_stack_v2_ET.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_v2_ET.zip' ParameterKey=BucketName,ParameterValue='team3-data' --capabilities CAPABILITY_IAM; echo "updating orders-stack"; aws cloudformation update-stack --stack-name team3-orders --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_stack_v2_L_orders.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_v2_L_orders.zip' ParameterKey=BucketName,ParameterValue='team3-orders' --capabilities CAPABILITY_IAM; echo "updating products-stack"; aws cloudformation update-stack --stack-name team3-products --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_stack_v2_L_products.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_v2_L_products.zip' ParameterKey=BucketName,ParameterValue='team3-products' --capabilities CAPABILITY_IAM; echo "updating stores-stack"; aws cloudformation update-stack --stack-name team3-stores --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_stack_v2_L_stores.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_v2_L_stores.zip' ParameterKey=BucketName,ParameterValue='team3-stores' --capabilities CAPABILITY_IAM; echo "updating ordersproducts-stack"; aws cloudformation update-stack --stack-name team3-ordersproducts --template-url https://team3-deployment.s3.eu-west-1.amazonaws.com/templates/etl_stack_v2_L_ordersproducts.yaml --region eu-west-1 --parameters ParameterKey=DeploymentBucket,ParameterValue='team3-deployment' ParameterKey=DeploymentPackageKey,ParameterValue='lambdafunctions/etl_v2_L_ordersproducts.zip' ParameterKey=BucketName,ParameterValue='team3-ordersproducts' --capabilities CAPABILITY_IAM
